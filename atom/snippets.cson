# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'.source.js':
  'describe':
    'prefix': 'desc'
    'body': """
      describe('${1:some test}', function () {
        ${0}
      });
    """
  'it':
    'prefix': 'it'
    'body': """
      it('${1:should work}', function () {
        ${0}
      });
    """
  'beforeEach':
    'prefix': 'be'
    'body': """
      beforeEach(function () {
        ${0}
      });
    """

  'before':
    'prefix': 'bf'
    'body': """
      before(function () {
        ${0}
      });
    """

  'afterEach':
    'prefix': 'ae'
    'body': """
      afterEach(function () {
        ${0}
      });
    """

  'after':
    'prefix': 'af'
    'body': """
      after(function () {
        ${0}
      });
    """

  'expect':
    'prefix': 'expect'
    'body': """
      expect(${1:true}).to.${2:equal}(${3:true});
    """

  'sinon sandbox':
    'prefix': 'sb'
    'body': """
      let sandbox;

      before(function () {
        sandbox = sinon.sandbox.create();
      });

      afterEach(function () {
        sandbox.restore();
      });
    """
